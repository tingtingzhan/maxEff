% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_dummy.R
\name{add_dummy}
\alias{add_dummy}
\alias{add_dummy_rSplit}
\title{Dichotomizing Predictors via Repeated Sample Splits}
\usage{
add_dummy_rSplit(
  start.model,
  x,
  data = eval(start.model$call$data),
  n,
  mc.cores = switch(.Platform$OS.type, windows = 1L, detectCores()),
  ...
)

add_dummy(
  start.model,
  x,
  data = eval(start.model$call$data),
  mc.cores = switch(.Platform$OS.type, windows = 1L, detectCores()),
  ...
)
}
\arguments{
\item{start.model}{a regression model, e.g.,
\link[stats]{lm}, \link[stats]{glm}, or \link[survival]{coxph}, etc.}

\item{x}{one-sided \link[stats]{formula},
\link[base]{numeric} predictors \eqn{x}'s as the columns of one \link[base]{matrix} column in \code{data}}

\item{data}{(optional) \link[base]{data.frame} in the model \link[base]{call} of \code{start.model}}

\item{n, ...}{additional parameters of function \link{rSplit} for function \link{add_dummy_rSplit}.
For function \code{add_dummy}, these parameters are not in use}

\item{mc.cores}{\link[base]{integer} scalar, see function \link[parallel]{mclapply}}
}
\value{
Function \link{add_dummy_rSplit} returns an object of \link[base]{class} \code{'add_dummy_rSplit'}, which is a \link[base]{list} of dichotomizing \link[base]{function}s.

Function \link{add_dummy} returns an object of class \code{'add_dummy'}.
}
\description{
Dichotomizing predictors using repeated sample splits.
}
\details{
Function \link{add_dummy_rSplit} dichotomizes predictors via repeated sample splits. Specifically,

\enumerate{
\item Generate multiple, i.e., repeated, training-test sample splits (via \link{rSplit})
\item For each candidate predictor \eqn{x_i}, find the \emph{\strong{median-split-dichotomized regression model}} based on the repeated sample splits, see functions \link{splitd_} and \link{quantile.splitd.list};
}

First, obtain the dichotomizing rules \eqn{\mathbf{\mathcal{D}}} of predictors \eqn{x_1,\cdots,x_k} based on
response \eqn{y} (via \link[maxEff]{rpart1}).

Then, \link[stats]{update} previous multivariable regression \code{start.model}
with dichotomized predictors \eqn{\left(\tilde{x}_1,\cdots,\tilde{x}_k\right) = \mathcal{D}\left(x_1,\cdots,x_k\right)}.
}
\examples{
library(spatstat.grouped)
library(spatstat.grouped.data)
library(survival) # to help ?spatstat.geom::hyperframe understand ?survival::Surv

s = grouped_ppp(hladr + phenotype ~ OS + gender + age | patient_id/image_id, data = wrobel_lung)
sQ = s |>
 aggregate_quantile(by = ~ patient_id, probs = seq.int(from = 0, to = 1, by = .1))
dim(sQ)

sQ0 = sQ[1:100,] # training set
sQ1 = sQ[-(1:100),] # test set

set.seed(234); m1 = coxph(OS ~ gender, data = sQ0) |>
 add_dummy_rSplit(x = ~ hladr.quantile, n = 20L) |> subset(subset = p1 > .15 & p1 < .85) |>
 sort_by(y = abs(effsize)) |>
 head(n = 2L)
m1
#hladr.quantile[, "0.1"]>=0.08082
#hladr.quantile[, "0"]>=0.0259
predict(m1, newdata = sQ1)

m2 = coxph(OS ~ gender, data = sQ0) |>
 add_dummy(x = ~ hladr.quantile) |> subset(subset = p1 > .15 & p1 < .85) |> 
 sort_by(y = abs(effsize)) |>
 head(n = 2L)
m2

}
